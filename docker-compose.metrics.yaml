services:
  postgres:
    image: postgres:14.0-alpine
    volumes:
      - postgres:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER",'-d','$POSTGRES_DB' ]
      interval: 5s
      retries: 5
    restart: on-failure

  ml_flow1:
    build:
      context: .
      dockerfile: ./Dockerfiles/mlflow/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - "5000:5000"
    restart: on-failure

  tensorboard:
    build:
      context: .
      dockerfile: ./Dockerfiles/tensorflow/Dockerfile
    container_name: tensorboard
    volumes:
      - ./${TENSORBOARD_LOGS_DIR}/:/${TENSORBOARD_LOGS_DIR}/
    ports:
      - 6006:6006
    command: tensorboard  --bind_all --logdir=/${TENSORBOARD_LOGS_DIR}/

  dev:
    build:
      context: .
      dockerfile: ./Dockerfiles/ops_app/Dockerfile
    volumes:
      - ./hse_mlops_hw:/src/hse_mlops_hw
      - ./data:/src/data
      - ./configs:/src/configs
      - ./.dvc:/src/.dvc
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all



volumes:
  postgres:
